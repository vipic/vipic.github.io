import{c as t,r as n,m as c}from"./render-template.DkzuPzdU.js";import{u as a}from"./hoisted.DznoGmjX.js";import"./astro/assets-service.CN38ZXn1.js";const o=`<p>总感觉我是有点电子洁癖的。</p>
<p>Mac 在使用一段时间后总是能感觉不如一开始流畅了，这个时候我基本会将内容备份一遍，但是不用时间胶囊的备份和恢复，而是格盘重装系统。再将电脑重新配置成我喜欢的样子。</p>
<p>再加上因为工作或者旧设备坏了或者其他原因更换电脑，导致每次都要去设置页面挨个条目点击并修改，去软件官网下载 (有时候它还会把下载按钮给藏起来)。之前也列了一个重置指南，基本上就是通过这个指南跳转到应用的安装页面，还要或者点击下载安装或者命令行安装，以及按照指南将不在设置 UI 中体现的配置通过命令行来修改。重复多次后感觉这个好像可以有改进空间，也了解了<strong>Nix as code</strong>，网上搜罗了解了下，这个是一个类系 Linux 的系统，其实也可以应用在 Mac 上，不过对我还是有点复杂。</p>
<p>在结合自身常用的软件环境等等，终于实现了我的 <strong>Mac as code</strong> 版本。依赖以下两个东西，一个是 <code>brew</code> - Mac 上的软件管理工具，另一个是 <code>defauts</code> - Mac 上的全部设置参数。</p>
<p><code>brew</code> 可能有相当多的人都了解了，全称 <code>Homebrew</code>，首次推出于 2009 年，经过这么多年的发展，几乎任何软件都可以通过它来安装。然而还是有些软件只有在 App Stroe 里面才有的，这个可以依赖 <code>brew</code> 安装的一个命令行工具 <code>mas</code> 来解决，不详细介绍了，github 仓库里面有这部分的内容。</p>
<p><code>defaults</code> 是 Mac 系统的一个命令，可以通过 <code>defaults read</code> 列出 Mac 系统的全部配置，包括从设置页面设置的内容，以及没有暴露给普通用户的隐藏配置，都可以通过这个来查询和修改。例如有的快捷键明明不在系统设置的快捷键里，但依旧没法使用，可以通过这个的相关命令来释放。苹果系统的文本替换在 iOS 上非常好用，但是在 Mac 上有其他的工具来使用，就可以使用 <code>defaults</code> 来禁止 Mac 上的文本替换。更多关于 <code>defaults</code> 的命令可以通过 <code>defaults -help</code> 来查看，根据自己的情况尝试和修改吧。</p>
<p>所以，我初步将我的配置整理并发布在 <a href="https://github.com/vipic/config/settings" rel="nofollow, noopener, noreferrer" target="_blank">这个仓库</a> 里，基本满足我的要求了。今后电脑重置我会继续迭代和更新。就这样吧。</p>`,r={title:"一行命令让 Mac 变成自己喜欢的样子",description:"介绍一下通过命令来配置 Mac 和安装应用。跳过繁复的设置页面，摆脱打开软件官网搜索下载按钮的困扰",publishDate:"18 Mar 2024",tags:["技巧","Mac"],minutesRead:"4 min read"},d="/home/runner/work/blog/blog/src/content/post/mac-as-code.md",s=void 0;function g(){return"\n总感觉我是有点电子洁癖的。\n\nMac 在使用一段时间后总是能感觉不如一开始流畅了，这个时候我基本会将内容备份一遍，但是不用时间胶囊的备份和恢复，而是格盘重装系统。再将电脑重新配置成我喜欢的样子。\n\n再加上因为工作或者旧设备坏了或者其他原因更换电脑，导致每次都要去设置页面挨个条目点击并修改，去软件官网下载 (有时候它还会把下载按钮给藏起来)。之前也列了一个重置指南，基本上就是通过这个指南跳转到应用的安装页面，还要或者点击下载安装或者命令行安装，以及按照指南将不在设置 UI 中体现的配置通过命令行来修改。重复多次后感觉这个好像可以有改进空间，也了解了**Nix as code**，网上搜罗了解了下，这个是一个类系 Linux 的系统，其实也可以应用在 Mac 上，不过对我还是有点复杂。\n\n在结合自身常用的软件环境等等，终于实现了我的 **Mac as code** 版本。依赖以下两个东西，一个是 `brew` - Mac 上的软件管理工具，另一个是 `defauts` - Mac 上的全部设置参数。\n\n`brew` 可能有相当多的人都了解了，全称 `Homebrew`，首次推出于 2009 年，经过这么多年的发展，几乎任何软件都可以通过它来安装。然而还是有些软件只有在 App Stroe 里面才有的，这个可以依赖 `brew` 安装的一个命令行工具 `mas` 来解决，不详细介绍了，github 仓库里面有这部分的内容。\n\n`defaults` 是 Mac 系统的一个命令，可以通过 `defaults read` 列出 Mac 系统的全部配置，包括从设置页面设置的内容，以及没有暴露给普通用户的隐藏配置，都可以通过这个来查询和修改。例如有的快捷键明明不在系统设置的快捷键里，但依旧没法使用，可以通过这个的相关命令来释放。苹果系统的文本替换在 iOS 上非常好用，但是在 Mac 上有其他的工具来使用，就可以使用 `defaults` 来禁止 Mac 上的文本替换。更多关于 `defaults` 的命令可以通过 `defaults -help` 来查看，根据自己的情况尝试和修改吧。\n\n所以，我初步将我的配置整理并发布在 [这个仓库](https://github.com/vipic/config/settings) 里，基本满足我的要求了。今后电脑重置我会继续迭代和更新。就这样吧。\n"}function b(){return o}function h(){return[]}const w=t((p,u,i)=>{const{layout:l,...e}=r;return e.file=d,e.url=s,n`${c()}${a(o)}`});export{w as Content,b as compiledContent,w as default,d as file,r as frontmatter,h as getHeadings,g as rawContent,s as url};
